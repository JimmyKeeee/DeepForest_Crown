Traceback (most recent call last):
  File "/Users/acoca/anaconda3/envs/envai-book/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/acoca/anaconda3/envs/envai-book/lib/python3.8/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/acoca/anaconda3/envs/envai-book/lib/python3.8/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/acoca/anaconda3/envs/envai-book/lib/python3.8/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/Users/acoca/anaconda3/envs/envai-book/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/Users/acoca/anaconda3/envs/envai-book/lib/python3.8/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/Users/acoca/anaconda3/envs/envai-book/lib/python3.8/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/Users/acoca/anaconda3/envs/envai-book/lib/python3.8/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fires = cat['modis_fires'].read()

time = fires.acq_date.astype(str) + ' ' + fires.acq_time.astype(str).str.zfill(4)
fires['timestamp'] = pd.to_datetime(time, format='%Y-%m-%d %H%M')
fires = fires.loc[fires.satellite == 'Terra']
fires = geopandas.GeoDataFrame(
    fires, geometry=geopandas.points_from_xy(fires.longitude, fires.latitude))

# We're only interested in data from Southern Africa for now
llx =  0    # projection x coordinate of lower left corner of lower left pixel
lly =  -30  # projection y coordinate of lower left corner of lower left pixel
urx =  55   # projection x coordinate of upper right corner of upper right pixel
ury =  10   # projection y coordinate of upper right corner of upper right pixel

fires = fires.cx[llx:urx, lly:ury]
fires.set_index('timestamp', drop=False, inplace=True)
fires = fires.sort_index()
fires = fires.loc['2020-09-01 00:00:00':'2020-10-01 00:00:00']
fires
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mIndexError[0m                                Traceback (most recent call last)
[0;32m/var/folders/l8/99_59fvn4bl2szm125grkgqw0000gr/T/ipykernel_4930/2728095482.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0mfires[0m [0;34m=[0m [0mcat[0m[0;34m[[0m[0;34m'modis_fires'[0m[0;34m][0m[0;34m.[0m[0mread[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0;34m[0m[0m
[1;32m      3[0m [0mtime[0m [0;34m=[0m [0mfires[0m[0;34m.[0m[0macq_date[0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mstr[0m[0;34m)[0m [0;34m+[0m [0;34m' '[0m [0;34m+[0m [0mfires[0m[0;34m.[0m[0macq_time[0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mstr[0m[0;34m)[0m[0;34m.[0m[0mstr[0m[0;34m.[0m[0mzfill[0m[0;34m([0m[0;36m4[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0mfires[0m[0;34m[[0m[0;34m'timestamp'[0m[0;34m][0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mto_datetime[0m[0;34m([0m[0mtime[0m[0;34m,[0m [0mformat[0m[0;34m=[0m[0;34m'%Y-%m-%d %H%M'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0mfires[0m [0;34m=[0m [0mfires[0m[0;34m.[0m[0mloc[0m[0;34m[[0m[0mfires[0m[0;34m.[0m[0msatellite[0m [0;34m==[0m [0;34m'Terra'[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/envai-book/lib/python3.8/site-packages/intake/source/csv.py[0m in [0;36mread[0;34m(self)[0m
[1;32m    127[0m [0;34m[0m[0m
[1;32m    128[0m     [0;32mdef[0m [0mread[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 129[0;31m         [0mself[0m[0;34m.[0m[0m_get_schema[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    130[0m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_dataframe[0m[0;34m.[0m[0mcompute[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    131[0m [0;34m[0m[0m

[0;32m~/anaconda3/envs/envai-book/lib/python3.8/site-packages/intake/source/csv.py[0m in [0;36m_get_schema[0;34m(self)[0m
[1;32m    113[0m [0;34m[0m[0m
[1;32m    114[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m_dataframe[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 115[0;31m             [0mself[0m[0;34m.[0m[0m_open_dataset[0m[0;34m([0m[0murlpath[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    116[0m [0;34m[0m[0m
[1;32m    117[0m         [0mdtypes[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_dataframe[0m[0;34m.[0m[0m_meta[0m[0;34m.[0m[0mdtypes[0m[0;34m.[0m[0mto_dict[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/envai-book/lib/python3.8/site-packages/intake/source/csv.py[0m in [0;36m_open_dataset[0;34m(self, urlpath)[0m
[1;32m     92[0m [0;34m[0m[0m
[1;32m     93[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mpattern[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 94[0;31m             self._dataframe = dask.dataframe.read_csv(
[0m[1;32m     95[0m                 [0murlpath[0m[0;34m,[0m [0mstorage_options[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0m_storage_options[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m     96[0m                 **self._csv_kwargs)

[0;32m~/anaconda3/envs/envai-book/lib/python3.8/site-packages/dask/dataframe/io/csv.py[0m in [0;36mread[0;34m(urlpath, blocksize, lineterminator, compression, sample, sample_rows, enforce, assume_missing, storage_options, include_path_column, **kwargs)[0m
[1;32m    723[0m         [0;34m**[0m[0mkwargs[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    724[0m     ):
[0;32m--> 725[0;31m         return read_pandas(
[0m[1;32m    726[0m             [0mreader[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    727[0m             [0murlpath[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/envai-book/lib/python3.8/site-packages/dask/dataframe/io/csv.py[0m in [0;36mread_pandas[0;34m(reader, urlpath, blocksize, lineterminator, compression, sample, sample_rows, enforce, assume_missing, storage_options, include_path_column, **kwargs)[0m
[1;32m    520[0m [0;34m[0m[0m
[1;32m    521[0m         [0;31m# Infer compression from first path[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 522[0;31m         [0mcompression[0m [0;34m=[0m [0minfer_compression[0m[0;34m([0m[0mpaths[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    523[0m [0;34m[0m[0m
[1;32m    524[0m     [0;32mif[0m [0mblocksize[0m [0;34m==[0m [0;34m"default"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mIndexError[0m: list index out of range
IndexError: list index out of range

